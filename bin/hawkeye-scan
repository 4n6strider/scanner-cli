#!/usr/bin/env node
const Scan = require('../lib/scan');
const logger = new require('../lib/logger')();
const fs = require('fs');
const summaryWriter = new require('../lib/writers/summary')();
const jsonWriter = new require('../lib/writers/json')();
const path = require('path');

let program = require('commander');
program
  .option('-t, --target </path/to/project>', 'The location of the project root', val => {
    if(!fs.existsSync(val)) {
      logger.error(val, 'is not a valid path');
      console.log('        Please ensure you pass a valid path')
      process.exit(1);
    }
    return val;
  })
  .option('-m, --modules <module1,module2>', 'Run specific module(s)', (val) => {
    return val.split(',');
  })
  .option('-o, --output </path/to/results.json>', 'Output the detailed JSON', val => {
    let dir = path.dirname(val);
    if(!fs.existsSync(dir)) {
      logger.error(dir, 'is not a valid path');
      console.log('        Please ensure you pass a valid path')
      process.exit(1);
    }
    return val;
  })
  .parse(process.argv);

let target = program.target || process.env.PWD;
target = target || '/target';

if(!fs.existsSync(target)) {
  logger.error('We were unable to infer the target directory');
  console.log('        We checked the $PWD variable and /target.');
  console.log('');
  console.log('        Please run with the --target flag');
  process.exit(1);
};

let modules = program.modules || ['all'];

let scan = new Scan({
  target: target
});

scan.start(modules, (err, results) => {
  let total = 0;
  results.forEach(moduleResult => {
    Object.keys(moduleResult.results).forEach(key => {
      total = total + moduleResult.results[key].length;
    });
  });
  logger.log('scan complete, ' + total + ' issues found');
  console.log('');
  summaryWriter.write(results);

  if(program.output) {
    jsonWriter.write(program.output, results);
    logger.log('json results written to: ' + program.output);
  }
});
